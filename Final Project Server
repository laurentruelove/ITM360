from flask import Flask, request, jsonify
import mysql.connector
from werkzeug.security import generate_password_hash, check_password_hash

app = Flask(__name__)

# Connect to MySQL database
connection = mysql.connector.connect(
    host="localhost",
    user="root",
    passwd="Oreo1234",
    database="PROJECTS"
)

# Change the table creation query to reference PROJECTS2
projects = """CREATE TABLE PROJECTS2 ( 
                   PROJECTID VARCHAR(10) PRIMARY KEY,
                   PASSWORD LONGTEXT,
                   Project_Details VARCHAR(200)
                   )
                   """ 

# Update the INSERT, SELECT, and UPDATE queries to reference PROJECTS2
@app.route('/create_project', methods=['POST'])
def create_project():
    data = request.json
    projectid = data['projectid']
    password = data['password']
    hashed_password = generate_password_hash(password)
    project_details = data['project_details']
    
    try:
        cursor = connection.cursor()
        cursor.execute("INSERT INTO PROJECTS2 (PROJECTID, PASSWORD, Project_Details) VALUES (%s, %s, %s)", (projectid, hashed_password, project_details))
        connection.commit()
        cursor.close()
        return jsonify({'message': 'Project created successfully'}), 200
    except mysql.connector.IntegrityError:
        return jsonify({'error': 'Project ID already exists'}), 409
    except Exception as e:
        return jsonify({'error': str(e)}), 500

@app.route('/fetch_project_details', methods=['GET'])
def fetch_project_details():
    projectid = request.args.get('projectid')
    password = request.args.get('password')  # Get password from request
    
    try:
        cursor = connection.cursor(dictionary=True)
        cursor.execute("SELECT * FROM PROJECTS2 WHERE PROJECTID = %s", (projectid,))
        project = cursor.fetchone()
        cursor.close()
        if project:
            # Check if password matches
            hashed_password = project['PASSWORD']
            if check_password_hash(hashed_password, password):
                return jsonify(project), 200
            else:
                return jsonify({'error': 'Incorrect password'}), 401
        else:
            return jsonify({'error': 'Project not found'}), 404
    except Exception as e:
        return jsonify({'error': str(e)}), 500

@app.route('/update_project_details', methods=['PUT'])
def update_project_details():
    data = request.json
    projectid = data['projectid']
    new_project_details = data['project_details']

    try:
        cursor = connection.cursor()
        cursor.execute("UPDATE PROJECTS2 SET Project_Details = %s WHERE PROJECTID = %s", (new_project_details, projectid))
        connection.commit()
        cursor.close()
        return jsonify({'message': 'Project details updated successfully'}), 200
    except Exception as e:
        return jsonify({'error': str(e)}), 500

if __name__ == '__main__':
    app.run(debug=True)
